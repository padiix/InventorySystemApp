<?xml version="1.0" encoding="utf-8"?>

<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:viewmodels="clr-namespace:InventorySystem.ViewModels"
             xmlns:xct="http://xamarin.com/schemas/2020/toolkit"
             x:DataType="viewmodels:LoginViewModel"
             x:Class="InventorySystem.Views.LoginPage"
             Shell.NavBarIsVisible="False"
             NavigationPage.HasNavigationBar="false">

    <ContentPage.Resources>

        <ResourceDictionary>

            <xct:InvertedBoolConverter x:Key="InvertedBoolConverter" />

        </ResourceDictionary>

    </ContentPage.Resources>

    <ContentPage.Content>
        <StackLayout Padding="10,0,10,0"
                     VerticalOptions="Center">
            <Label Text="Inventory System"
                   HorizontalOptions="Center"
                   FontSize="Title"
                   Padding="0,30"/>

            <Frame BackgroundColor="SeaShell"
                   CornerRadius="7">
                <StackLayout>

                    <Entry x:Name="EmailEntry"
                           Placeholder="E-mail"
                           FontSize="Medium"
                           IsSpellCheckEnabled="False"
                           Text="{Binding Email}"
                           IsReadOnly="{Binding IsReadOnlyEmailEntry}">
                        <Entry.Behaviors>

                            <xct:CharactersValidationBehavior Flags="ValidateOnValueChanging"
                                                              RegexPattern="(^$|^.*@.*\..*$)"
                                                              IsValid="{Binding IsEmailValid}" />

                        </Entry.Behaviors>
                    </Entry>

                    <Label x:Name="EmailError"
                           Text="E-mail jest niepoprawny"
                           IsVisible="{Binding IsEmailValid, Converter={StaticResource InvertedBoolConverter}}"
                           TextColor="Red"
                           FontSize="Caption"
                           FontAttributes="Bold" />

                    <Entry x:Name="PasswordEntry"
                           Placeholder="Hasło"
                           FontSize="Medium"
                           IsPassword="True"
                           Text="{Binding Password}"
                           IsReadOnly="{Binding IsReadOnlyPasswordEntry}"
                           TextChanged="PasswordEntry_OnTextChanged">
                        <Entry.Behaviors>

                            <xct:MultiValidationBehavior x:Name="PasswordValidationBehavior"
                                                         Flags="ValidateOnValueChanging">

                                <xct:TextValidationBehavior MinimumLength="6"
                                                            xct:MultiValidationBehavior.Error="* conajmniej 6 znaków" />

                                <xct:CharactersValidationBehavior RegexPattern="[A-Z]"
                                                                  xct:MultiValidationBehavior.Error="* conamjniej 1 dużą literę" />

                                <xct:CharactersValidationBehavior RegexPattern="[a-z]"
                                                                  xct:MultiValidationBehavior.Error="* conajmniej 1 małą literę" />

                                <xct:CharactersValidationBehavior RegexPattern="[0-9]"
                                                                  xct:MultiValidationBehavior.Error="* conajmniej 1 cyfrę" />

                                <xct:CharactersValidationBehavior RegexPattern="[^a-zA-Z0-9]"
                                                                  xct:MultiValidationBehavior.Error="* conajmniej 1 znak specjalny" />

                            </xct:MultiValidationBehavior>

                        </Entry.Behaviors>
                    </Entry>

                    <Label x:Name="PasswordError"
                           IsVisible="False"
                           TextColor="Red"
                           FontSize="Caption"
                           FontAttributes="Bold" />

                    <FlexLayout AlignItems="Center"
                                JustifyContent="End">

                        <Label Text="Zapamiętaj mnie"/>

                        <CheckBox x:Name="RememberMeChkbox"
                                  IsChecked="False"
                                  IsEnabled="{Binding IsEnabledRememberMe}"
                                  CheckedChanged="RememberMeChkbox_OnCheckedChanged" />

                    </FlexLayout>

                    <Button VerticalOptions="Center"
                            Text="Zaloguj"
                            Command="{Binding LoginCommand}"
                            IsEnabled="{Binding IsEnabledLoginButton}" />

                    <Button VerticalOptions="Center"
                            Text="Zarejestruj się"
                            Clicked="UserRegisterButton_OnClick"
                            IsEnabled="{Binding IsEnabledRegisterButton}" />

                </StackLayout>
            </Frame>

            <StackLayout Orientation="Horizontal"
                         HorizontalOptions="Center"

                         Padding="0,50,0,0">

                <Label IsVisible="{Binding ConnectingMessageVisibility}"
                       Text="Łączenie z API"
                       FontSize="Subtitle"
                       Padding="0,15,10,0" />

                <ActivityIndicator IsRunning="{Binding RunActivityIndicator}" />

            </StackLayout>

        </StackLayout>
    </ContentPage.Content>
</ContentPage>